{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateFlag",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060008054336001600160a01b03199182168117835560018054909216909155604051909190829081907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908490a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a3505061060a806100a66000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063890eba6811610050578063890eba68146100a75780638da5cb5b146100e1578063bf7e214f1461012657600080fd5b806313af4035146100775780633a7104d11461008c5780637a9e5e4b14610094575b600080fd5b61008a6100853660046105b7565b610146565b005b61008a61024f565b61008a6100a23660046105b7565b610324565b6001546100cc9074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b6000546101019073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d8565b6001546101019073ffffffffffffffffffffffffffffffffffffffff1681565b610174336000357fffffffff0000000000000000000000000000000000000000000000000000000016610481565b6101df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b61027d336000357fffffffff0000000000000000000000000000000000000000000000000000000016610481565b6102e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016101d6565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633148061040757506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa1580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040791906105db565b61041057600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b60015460009073ffffffffffffffffffffffffffffffffffffffff16801580159061056557506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015610541573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056591906105db565b8061058a575060005473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b73ffffffffffffffffffffffffffffffffffffffff811681146105b457600080fd5b50565b6000602082840312156105c957600080fd5b81356105d481610592565b9392505050565b6000602082840312156105ed57600080fd5b815180151581146105d457600080fdfea164736f6c6343000811000a",
    "sourceMap": "114:175:52:-:0;;;;;;;;;;;;-1:-1:-1;175:1:52;665:14:7;;145:10:52;-1:-1:-1;;;;;;665:14:7;;;;;;;-1:-1:-1;689:22:7;;;;;;;;727:32;;145:10:52;;175:1;145:10;;;;727:32:7;;175:1:52;;727:32:7;774:40;;-1:-1:-1;;;;;774:40:7;;;791:10;;774:40;;;;;605:216;;114:175:52;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100725760003560e01c8063890eba6811610050578063890eba68146100a75780638da5cb5b146100e1578063bf7e214f1461012657600080fd5b806313af4035146100775780633a7104d11461008c5780637a9e5e4b14610094575b600080fd5b61008a6100853660046105b7565b610146565b005b61008a61024f565b61008a6100a23660046105b7565b610324565b6001546100cc9074010000000000000000000000000000000000000000900460ff1681565b60405190151581526020015b60405180910390f35b6000546101019073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d8565b6001546101019073ffffffffffffffffffffffffffffffffffffffff1681565b610174336000357fffffffff0000000000000000000000000000000000000000000000000000000016610481565b6101df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b61027d336000357fffffffff0000000000000000000000000000000000000000000000000000000016610481565b6102e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016101d6565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b60005473ffffffffffffffffffffffffffffffffffffffff1633148061040757506001546040517fb70096130000000000000000000000000000000000000000000000000000000081523360048201523060248201526000357fffffffff0000000000000000000000000000000000000000000000000000000016604482015273ffffffffffffffffffffffffffffffffffffffff9091169063b700961390606401602060405180830381865afa1580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040791906105db565b61041057600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b60015460009073ffffffffffffffffffffffffffffffffffffffff16801580159061056557506040517fb700961300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301523060248301527fffffffff000000000000000000000000000000000000000000000000000000008516604483015282169063b700961390606401602060405180830381865afa158015610541573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056591906105db565b8061058a575060005473ffffffffffffffffffffffffffffffffffffffff8581169116145b949350505050565b73ffffffffffffffffffffffffffffffffffffffff811681146105b457600080fd5b50565b6000602082840312156105c957600080fd5b81356105d481610592565b9392505050565b6000602082840312156105ed57600080fd5b815180151581146105d457600080fdfea164736f6c6343000811000a",
    "sourceMap": "114:175:52:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1938:147:7;;;;;;:::i;:::-;;:::i;:::-;;209:78:52;;;:::i;1498:434:7:-;;;;;;:::i;:::-;;:::i;186:16:52:-;;;;;;;;;;;;;;;861:14:101;;854:22;836:41;;824:2;809:18;186:16:52;;;;;;;;545:20:7;;;;;;;;;;;;1064:42:101;1052:55;;;1034:74;;1022:2;1007:18;545:20:7;888:226:101;572:26:7;;;;;;;;;1938:147;877:33;890:10;902:7;;;;877:12;:33::i;:::-;869:58;;;;;;;1571:2:101;869:58:7;;;1553:21:101;1610:2;1590:18;;;1583:30;1649:14;1629:18;;;1622:42;1681:18;;869:58:7;;;;;;;;;2012:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;2044:34:::1;::::0;2012:16;;2057:10:::1;::::0;2044:34:::1;::::0;2012:5;2044:34:::1;1938:147:::0;:::o;209:78:52:-;877:33:7;890:10;902:7;;;;877:12;:33::i;:::-;869:58;;;;;;;1571:2:101;869:58:7;;;1553:21:101;1610:2;1590:18;;;1583:30;1649:14;1629:18;;;1622:42;1681:18;;869:58:7;1369:336:101;869:58:7;276:4:52::1;269:11:::0;;;::::1;::::0;::::1;::::0;;209:78::o;1498:434:7:-;1769:5;;;;1755:10;:19;;:76;;-1:-1:-1;1778:9:7;;:53;;;;;1796:10;1778:53;;;1971:34:101;1816:4:7;2021:18:101;;;2014:43;1778:9:7;1823:7;;;2073:18:101;;;2066:107;1778:9:7;;;;;:17;;1883:18:101;;1778:53:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1747:85;;;;;;1843:9;:24;;;;;;;;;;;;;1883:42;;1900:10;;1883:42;;-1:-1:-1;;1883:42:7;1498:434;:::o;952:540::-;1072:9;;1039:4;;1072:9;;1390:27;;;;;:77;;-1:-1:-1;1421:46:7;;;;;:12;1989:15:101;;;1421:46:7;;;1971:34:101;1448:4:7;2021:18:101;;;2014:43;2105:66;2093:79;;2073:18;;;2066:107;1421:12:7;;;;;1883:18:101;;1421:46:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1389:96;;;-1:-1:-1;1480:5:7;;;1472:13;;;1480:5;;1472:13;1389:96;1382:103;952:540;-1:-1:-1;;;;952:540:7:o;14:154:101:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:247::-;232:6;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;340:9;327:23;359:31;384:5;359:31;:::i;:::-;409:5;173:247;-1:-1:-1;;;173:247:101:o;2184:277::-;2251:6;2304:2;2292:9;2283:7;2279:23;2275:32;2272:52;;;2320:1;2317;2310:12;2272:52;2352:9;2346:16;2405:5;2398:13;2391:21;2384:5;2381:32;2371:60;;2427:1;2424;2417:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authority()": "bf7e214f",
    "flag()": "890eba68",
    "owner()": "8da5cb5b",
    "setAuthority(address)": "7a9e5e4b",
    "setOwner(address)": "13af4035",
    "updateFlag()": "3a7104d1"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateFlag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/utils/mocks/MockAuthChild.sol\":\"MockAuthChild\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/auth/Auth.sol\":{\"keccak256\":\"0xb7dc249001ce9eeed530d7268eb5258d4390f24c715c9644e554110d97f728c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://352585c3a001a5aaa2ad202493077a64870a7cfa83718c8db1c88164d89ea3b5\",\"dweb:/ipfs/QmTGaVV5vhnaBY26hPypMiXbaybxUuC1FaqNDGn81cL9fQ\"]},\"src/test/utils/mocks/MockAuthChild.sol\":{\"keccak256\":\"0x3159f9b451bb210a496ac797ed0fd8a0dcf5ecbf60b9206e92ae4b61209ae356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://591eb236d8dc46a4528c252833b86a29dd2bc4bb0e32f7f005d7dfc101ed949e\",\"dweb:/ipfs/QmW1vV7oRkqiAfB2PZrnQfgVxCSEU5Qypn5r35nUYETLLF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorityUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authority",
          "outputs": [
            {
              "internalType": "contract Authority",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "flag",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthority"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateFlag"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/test/utils/mocks/MockAuthChild.sol": "MockAuthChild"
      },
      "libraries": {}
    },
    "sources": {
      "src/auth/Auth.sol": {
        "keccak256": "0xb7dc249001ce9eeed530d7268eb5258d4390f24c715c9644e554110d97f728c3",
        "urls": [
          "bzz-raw://352585c3a001a5aaa2ad202493077a64870a7cfa83718c8db1c88164d89ea3b5",
          "dweb:/ipfs/QmTGaVV5vhnaBY26hPypMiXbaybxUuC1FaqNDGn81cL9fQ"
        ],
        "license": "MIT"
      },
      "src/test/utils/mocks/MockAuthChild.sol": {
        "keccak256": "0x3159f9b451bb210a496ac797ed0fd8a0dcf5ecbf60b9206e92ae4b61209ae356",
        "urls": [
          "bzz-raw://591eb236d8dc46a4528c252833b86a29dd2bc4bb0e32f7f005d7dfc101ed949e",
          "dweb:/ipfs/QmW1vV7oRkqiAfB2PZrnQfgVxCSEU5Qypn5r35nUYETLLF"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/utils/mocks/MockAuthChild.sol",
    "id": 66200,
    "exportedSymbols": {
      "Auth": [
        23359
      ],
      "Authority": [
        23372
      ],
      "MockAuthChild": [
        66199
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:258:52",
    "nodes": [
      {
        "id": 66173,
        "nodeType": "PragmaDirective",
        "src": "32:23:52",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 66176,
        "nodeType": "ImportDirective",
        "src": "57:55:52",
        "absolutePath": "src/auth/Auth.sol",
        "file": "../../../auth/Auth.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66200,
        "sourceUnit": 23373,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66174,
              "name": "Auth",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23359,
              "src": "65:4:52",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 66175,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23372,
              "src": "71:9:52",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66199,
        "nodeType": "ContractDefinition",
        "src": "114:175:52",
        "nodes": [
          {
            "id": 66188,
            "nodeType": "VariableDeclaration",
            "src": "186:16:52",
            "constant": false,
            "functionSelector": "890eba68",
            "mutability": "mutable",
            "name": "flag",
            "nameLocation": "198:4:52",
            "scope": 66199,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 66187,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "186:4:52",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 66198,
            "nodeType": "FunctionDefinition",
            "src": "209:78:52",
            "body": {
              "id": 66197,
              "nodeType": "Block",
              "src": "259:28:52",
              "statements": [
                {
                  "expression": {
                    "id": 66195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66193,
                      "name": "flag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66188,
                      "src": "269:4:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 66194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "276:4:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "269:11:52",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66196,
                  "nodeType": "ExpressionStatement",
                  "src": "269:11:52"
                }
              ]
            },
            "functionSelector": "3a7104d1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 66191,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 66190,
                  "name": "requiresAuth",
                  "nameLocations": [
                    "246:12:52"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23264,
                  "src": "246:12:52"
                },
                "nodeType": "ModifierInvocation",
                "src": "246:12:52"
              }
            ],
            "name": "updateFlag",
            "nameLocation": "218:10:52",
            "parameters": {
              "id": 66189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "228:2:52"
            },
            "returnParameters": {
              "id": 66192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:52"
            },
            "scope": 66199,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "expression": {
                  "id": 66178,
                  "name": "msg",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -15,
                  "src": "145:3:52",
                  "typeDescriptions": {
                    "typeIdentifier": "t_magic_message",
                    "typeString": "msg"
                  }
                },
                "id": 66179,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberLocation": "149:6:52",
                "memberName": "sender",
                "nodeType": "MemberAccess",
                "src": "145:10:52",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 66183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "175:1:52",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 66182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "167:7:52",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 66181,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "167:7:52",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 66184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "167:10:52",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  ],
                  "id": 66180,
                  "name": "Authority",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 23372,
                  "src": "157:9:52",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Authority_$23372_$",
                    "typeString": "type(contract Authority)"
                  }
                },
                "id": 66185,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "typeConversion",
                "lValueRequested": false,
                "nameLocations": [],
                "names": [],
                "nodeType": "FunctionCall",
                "src": "157:21:52",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Authority_$23372",
                  "typeString": "contract Authority"
                }
              }
            ],
            "baseName": {
              "id": 66177,
              "name": "Auth",
              "nameLocations": [
                "140:4:52"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23359,
              "src": "140:4:52"
            },
            "id": 66186,
            "nodeType": "InheritanceSpecifier",
            "src": "140:39:52"
          }
        ],
        "canonicalName": "MockAuthChild",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          66199,
          23359
        ],
        "name": "MockAuthChild",
        "nameLocation": "123:13:52",
        "scope": 66200,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 52
}